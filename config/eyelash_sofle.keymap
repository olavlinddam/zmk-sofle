#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include "keys_da.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    modlayer: modlayer {
        compatible = "zmk,behavior-mod-morph";
        label = "MODLAYER";
        bindings = <&mo 1>, <&mo 2>;

        #binding-cells = <0>;
        mods = <(MOD_RSFT)>;
    };

    behaviors {
    };

    macros {
        oe: oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(A) &kp L &kp T &kp PLUS &kp N0 &kp N2 &kp N1 &kp N6>;
            label = "OE";
        };

        aa: aa {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(A) &kp L &kp T &kp PLUS &kp N1 &kp N4 &kp N3>;
            label = "AA";
        };
    };

    combos {
        compatible = "zmk,combos";

        navLayer {
            bindings = <&mo 2>;
            key-positions = <61 57>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha {
            bindings = <
&kp CAPSLOCK  &kp N1        &kp N2     &kp N3          &kp N4     &kp N5    &kp UP_ARROW     &kp N6     &kp N7         &kp N8           &kp N9             &kp N0         &none
&kp TAB       &kp Q         &kp W      &kp E           &kp R      &kp T     &kp DOWN_ARROW   &kp Y      &kp U          &kp I            &kp O              &kp P          &kp DA_A_RING
&kp ESC       &kp A         &kp S      &kp D           &kp F      &kp G     &kp LEFT_ARROW   &kp H      &kp J          &kp K            &kp L              &kp DA_AE      &kp DA_O_SLASH
&kp LEFT_GUI  &kp Z         &kp X      &kp C           &kp V      &kp B     &kp RIGHT_ARROW  &kp N      &kp M          &kp COMMA        &kp DOT            &kp RIGHT_ALT  &mo 2
&kp C_MUTE    &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &kp SPACE  &gresc    &mkp LCLK        &kp ENTER  &kp BACKSPACE  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        symbol {
            bindings = <
&none         &none            &none              &none         &none          &none               &mmv MOVE_UP     &none                 &none                    &none                     &none              &none                &none
&trans        &kp DA_ONE_HALF  &kp DA_AT_SIGN     &kp DA_POUND  &kp DA_DOLLAR  &kp DA_AMPERSAND    &mmv MOVE_DOWN   &kp DA_QUESTION       &kp DA_LEFT_BRACKET      &kp DA_RIGHT_BRACKET      &kp DA_LESS_THAN   &kp DA_GREATER_THAN  &none
&trans        &kp DA_EXCL      &kp DA_MINUS       &kp DA_PLUS   &kp DA_EQUAL   &kp DA_FSLH         &mmv MOVE_LEFT   &kp DA_DOUBLE_QUOTES  &kp DA_LEFT_PARENTHESIS  &kp DA_RIGHT_PARENTHESIS  &kp DA_COLON       &kp DA_GRAVE         &none
&kp LEFT_GUI  &kp DA_TILDE     &kp DA_UNDERSCORE  &kp DA_CARET  &kp DA_STAR    &kp DA_BACKSLASH    &mmv MOVE_RIGHT  &kp DA_SINGLE_QUOTE   &kp DA_LEFT_BRACE        &kp DA_RIGHT_BRACE        &kp DA_SEMICOLON   &kp DA_UMLAUT        &trans
&kp C_MUTE    &kp LEFT_ALT     &kp LCTRL          &kp LSHIFT    &kp SPACE      &sl 0               &mkp LCLK        &kp ENTER             &kp BACKSPACE            &kp RIGHT_SHIFT           &kt RIGHT_CONTROL  &kp DELETE
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        navigation {
            bindings = <
&kp ESC       &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6          &kp F7         &kp F8          &kp F9     &kp F10      &trans
&kp TAB       &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans          &trans         &kp F11         &kp F12    &kp UNDER    &kp PLUS
&kp CAPSLOCK  &out OUT_USB  &out OUT_BLE    &mkp RCLK     &mkp LCLK     &trans          &mmv MOVE_LEFT   &kp LEFT_ARROW  &kp UP         &kp DOWN_ARROW  &kp RIGHT  &none        &kp RBRC
&kp LCMD      &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans          &trans         &sys_reset      &soft_off  &bootloader  &trans
&trans        &kp LEFT_ALT  &kp LCTRL       &kp LSHIFT    &kp SPACE     &mo 0           &mkp LCLK        &kp ENTER       &kp BACKSPACE  &kp RSHIFT      &kp RCTRL  &kp DELETE
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
